  - name: update apt cache
    apt: update_cache=yes
    tags:
      - flocker_node_setup
      - update_packages

  - name: install docker required packages
    apt: pkg={{item}} state=present
    with_items:
      - apt-transport-https
      - software-properties-common
    tags:
      - flocker_node_setup
      - packages

  - name: add flocker_node repository
    apt_repository: repo="deb https://clusterhq-archive.s3.amazonaws.com/ubuntu/{{ansible_distribution_version}}/$(ARCH) /" state=present
    tags:
      - docker_setup
      - packages

  - name: set /etc/apt/preferences.d/buildbot-700
    copy: src=../files/buildbot-700 dest=/etc/apt/preferences.d/buildbot-700 owner=root group=root mode=644
    tags:
      - docker_setup
      - packages

  - name: update apt cache
    apt: update_cache=yes
    tags:
      - flocker_node_setup
      - update_packages

  - name: install flocker_node packages
    apt: pkg={{item}} state=present force=yes
    with_items:
      - clusterhq-flocker-node
      - clusterhq-flocker-cli
      - clusterhq-flocker-docker-plugin
    tags:
      - flocker_node_setup
      - packages

  - name: install clusterhq-flocker-docker-plugin
    apt: pkg={{item}} state=present
    with_items:
      - clusterhq-flocker-docker-plugin
    tags:
      - flocker_node_setup
      - packages

  - name: create /etc/flocker
    file: path=/etc/flocker state=directory mode=0700
    tags:
      - flocker_node_setup
      - certificates

  - name: copy cluster.crt
    copy: src=../files/certificates/cluster.crt dest=/etc/flocker/cluster.crt owner=root group=root mode=600
    tags:
      - flocker_node_setup
      - certificates

  - name: copy control-{{hostname}}.{{flocker_domain}}.crt
    copy: src=../files/certificates/control-{{hostname}}.{{flocker_domain}}.crt dest=/etc/flocker/control-service.crt owner=root group=root mode=600
    when: control is defined
    tags:
      - flocker_node_setup
      - certificates

  - name: copy control-{{hostname}}.{{flocker_domain}}.key
    copy: src=../files/certificates/control-{{hostname}}.{{flocker_domain}}.key dest=/etc/flocker/control-service.key owner=root group=root mode=600
    when: control is defined
    tags:
      - flocker_node_setup
      - certificates

  - name: copy node.crt
    copy: src=../files/certificates/{{flocker_id}}.crt dest=/etc/flocker/node.crt owner=root group=root mode=600
    tags:
      - flocker_node_setup
      - certificates

  - name: copy node.key
    copy: src=../files/certificates/{{flocker_id}}.key dest=/etc/flocker/node.key owner=root group=root mode=600
    tags:
      - flocker_node_setup
      - certificates

  - name: copy plugin.crt
    copy: src=../files/certificates/plugin.crt dest=/etc/flocker/plugin.crt owner=root group=root mode=600
    tags:
      - flocker_node_setup
      - certificates

  - name: copy plugin.key
    copy: src=../files/certificates/plugin.key dest=/etc/flocker/plugin.key owner=root group=root mode=600
    tags:
      - flocker_node_setup
      - certificates

  - name: enbale flocker-control
    service: name=flocker-control state=running
    when: control is defined
    tags:
      - flocker_node_setup
      - service
